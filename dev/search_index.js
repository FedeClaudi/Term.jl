var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Term","category":"page"},{"location":"","page":"Home","title":"Home","text":"Term.jl is a Julia library for producing, styled and beautiful terminal output, like this:","category":"page"},{"location":"","page":"Home","title":"Home","text":"import Term\nprint(Term.make_logo())","category":"page"},{"location":"","page":"Home","title":"Home","text":"Term.jl uses a simple markup syntax to add style information to standard Julia strings. It also provides Renderable objects such as the Panels and TextBoxes that you can see in the example below. These too can be styled, and include styled text, but more importantly they can benested and stacked to produce structured visual displays in your terminal. ","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In a Julia script:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkd\n\nPkg.add(\"Term\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"or in the Julia REPL","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]  # enters the pkg interface\npkg> add Term","category":"page"},{"location":"","page":"Home","title":"Home","text":"done!","category":"page"},{"location":"","page":"Home","title":"Home","text":"The rest of the documentation is dedicated to explaining the basic concepts behavind Term.jl and how to use Term to produce styled terminal text.  Head to the GitHub repository to find several detailed examples or jump in the Discussions to start chatting with us. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"``note \"A note onRichTerm.jl is based on a pre-existing package calledrich(see [here](https://github.com/Textualize/rich)) developed by Will McGugan. While most of howTerm.jlhandles things under the hood is specific toTerm, the basic concepts behind how to even begin creating fancy terminal outputs like the ones thatrichandTerm` can produce are entirely Will's work. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"We're very thankful to Will for making rich's code open soruce and for the help and encouragement during the development of Term. ```","category":"page"}]
}
