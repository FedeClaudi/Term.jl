─────────────────────────────── inspecting: Panel ──────────────────────────────
    ╭─────────────────────────────────────────────────────────────────────────╮
    │                                                                         │
    │                   Panel <: Term.Panels.AbstractPanel                    │
    │                     │segments ::Vector                                  │
    │                     │ measure ::Term.Measures.Measure                   │
    │                                                                         │
    ╰─────────────────────────────────────────────────────────────────────────╯
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Docstring ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    ┌──────────────────────────────────────────────────────────────────┐
    │  Panel                                                           │
    └──────────────────────────────────────────────────────────────────┘

`Renderable` with a panel surrounding some content:

    ┌──────────────────────────────────────────────────────────────────┐
    │      ╭──────────╮                                                │
    │      │ my panel │                                                │
    │      ╰──────────╯                                                │
    └──────────────────────────────────────────────────────────────────┘

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

When constructing a Panel, several keyword arguments can be used to set its 
appearance:

  • box::Symbol sets the `Box` type for the Panel's border
  • style::String  sets the box's style (e.g., color)
  • title::Union  sets the Panel's title
  • title_style::Union sets the title's style
  • title_justify::Symbol     sets the location of the title
  • subtitle::Union  sets the Panel's subtitle
  • subtitle_style::Union  sets the subtitle's style
  • subtitle_justify::Symbol  sets the location of the subtitle
  • justify::Symbol sets text's alignment (:left, :rigth, :center, :justify)


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

    ┌──────────────────────────────────────────────────────────────────┐
    │  Panel(;                                                         │
    │      fit::Bool = false,                                          │
    │      height::Int = 2,                                            │
    │      width::Int = 80,                                            │
    │      padding::Union{Vector,Padding,NTuple} = Padding(0, 0, 0, 0),  │
    │      kwargs...,                                                  │
    │  )                                                               │
    └──────────────────────────────────────────────────────────────────┘

Construct a `Panel` with no content.

                                   Examples                                    

    ┌──────────────────────────────────────────────────────────────────┐
    │  julia> Panel(height=5, width=10)                                │
    │  ╭────────╮                                                      │
    │  │        │                                                      │
    │  │        │                                                      │
    │  │        │                                                      │
    │  ╰────────╯                                                      │
    │                                                                  │
    │  julia> Panel(height=3, width=5)                                 │
    │  ╭───╮                                                           │
    │  │   │                                                           │
    │  ╰───╯                                                           │
    └──────────────────────────────────────────────────────────────────┘

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

    ┌──────────────────────────────────────────────────────────────────┐
    │  Panel(                                                          │
    │      content::Union{AbstractString,AbstractRenderable};          │
    │      fit::Bool = false,                                          │
    │      padding::Union{Nothing,Padding,NTuple} = nothing,           │
    │      kwargs...,                                                  │
    │  )                                                               │
    └──────────────────────────────────────────────────────────────────┘

Construct a `Panel` around an `AbstractRenderable` or `AbstractString`.

This is the main Panel-creating function, it dispatches to other methods based 
on the value of `fit` to either fith the `Panel` to its content or vice versa.

`kwargs` can be used to set various aspects of the `Panel`'s appearance like 
the presence and style of titles, box type etc... see render (@ref) below.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

    ┌──────────────────────────────────────────────────────────────────┐
    │  Panel(                                                          │
    │      content::Union{AbstractString,AbstractRenderable},          │
    │      ::Val{true},                                                │
    │      padding::Padding;                                           │
    │      height::Union{Nothing,Int} = nothing,                       │
    │      width::Union{Nothing,Int} = nothing,                        │
    │      trim::Bool = true,                                          │
    │      kwargs...,                                                  │
    │  )                                                               │
    └──────────────────────────────────────────────────────────────────┘

Construct a `Panel` fitting the content's width.

    ╭──── Warning ─────────────────────────────────────────────────────────╮
    │  If the content is larger than the console terminal's width, it      │
    │  will                                                                │
    │  get trimmed                                                         │
    │  to avoid overflow, unless `trim=false` is given.                    │
    ╰──────────────────────────────────────────────────────────────────────╯

27 lines omitted...


○ Types hierarchy: 
    Term.Renderables.AbstractRenderable                   
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━                  
                     │                                    
                     ├── Term.Progress.AbstractColumn     
                     ├── Term.Panels.AbstractPanel        
                     │   └── Panel                        
                     ├── Term.Layout.AbstractLayoutElement
                     ├── Tree                             
                     ├── RenderableText                   
                     ├── Table                            
                     ├── Term.Dendograms.Leaf             
                     ├── Term.Renderables.Renderable      
                     └── Dendogram                        

○ Panel constructors: 
   ────── Methods in Term.Panels for Panel ──────                              
     (1)  Panel(; fit, height, width, padding, kwargs...)                      
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:101
                                                                               
     (2)  Panel(content::Union{AbstractString, Term.Renderables.AbstractRenderable}; fit, padding, width, kwargs...)
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:152                                     
                                                                                                                    
     (3)  Panel(content::Union{AbstractString,                                  
Term.Renderables.AbstractRenderable}, ::Val{false}, padding::Term.Layout.Padding; 
height, width, background, justify, kwargs...)                                  
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:273   
                                                                                  
     (4)  Panel(content::Union{AbstractString,                                  
Term.Renderables.AbstractRenderable}, ::Val{true}, padding::Term.Layout.Padding; 
height, width, background, justify, kwargs...)                                  
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:219  
                                                                                 
     (5)  Panel(texts::Vector{AbstractString}; kwargs...)                      
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:334
                                                                               
     (6)  Panel(renderables::Vector{Union{AbstractString, Term.Renderables.AbstractRenderable}; kwargs...)
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:331                           
                                                                                                          
     (7)  Panel(ren; kwargs...)                                                
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:335
                                                                               
     (8)  Panel(x1, x2; kwargs...)                                            
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:61
                                                                              
     (9)  Panel(ren, renderables...; kwargs...)                                
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:336
                                                                               

○ Methods for Panel: 
   ────── Methods in Term.Panels for Panel ──────                             
     (1)  sizesize(p::Panel)                                                  
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:72
                                                                              

○ Methods for Term.Renderables.AbstractRenderable: 
   ────── Methods in Term.Layout for AbstractRenderable ──────                 
     (1)  **(r1::AbstractString, r2::Term.Renderables.AbstractRenderable)      
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/layout.jl:523
                                                                               
     (2)  **(r1::Term.Renderables.AbstractRenderable, r2::AbstractString)      
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/layout.jl:524
                                                                               
     (3)  **(r1::Term.Renderables.AbstractRenderable,                           
r2::Term.Renderables.AbstractRenderable)                                        
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/layout.jl:522 
                                                                                
     (4)  //(r1::Union{AbstractString, Term.Renderables.AbstractRenderable}, r2::Union{AbstractString, Term.Renderables.AbstractRenderable})
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/layout.jl:518                                                             
                                                                                                                                            
   ────── Methods in Term.Renderables for AbstractRenderable ──────             
     (5)  printprint(io::IO, renderable::Term.Renderables.AbstractRenderable;   
highlight)                                                                      
             →                                                                  
/Users/federicoclaudi/Documents/Github/Term.jl/src/renderables.jl:66            
                                                                                
     (6)  showshow(io::IO, renderable::Term.Renderables.AbstractRenderable)     
             →                                                                  
/Users/federicoclaudi/Documents/Github/Term.jl/src/renderables.jl:76            
                                                                                
     (7)  showshow(io::IO, ::MIME{Symbol("text/plain")},                        
renderable::Term.Renderables.AbstractRenderable)                                
             →                                                                  
/Users/federicoclaudi/Documents/Github/Term.jl/src/renderables.jl:83            
                                                                                
     (8)  stringstring(r::Term.Renderables.AbstractRenderable)                  
             →                                                                  
/Users/federicoclaudi/Documents/Github/Term.jl/src/renderables.jl:43            
                                                                                
   ────── Methods in Term.Panels for AbstractRenderable ──────                                                           
     (9)  PanelPanel(content::Union{AbstractString, Term.Renderables.AbstractRenderable}; fit, padding, width, kwargs...)
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:152                                          
                                                                                                                         
     (10)  PanelPanel(content::Union{AbstractString,                            
Term.Renderables.AbstractRenderable}, ::Val{false}, padding::Term.Layout.Padding; 
height, width, background, justify, kwargs...)                                  
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:273   
                                                                                  
     (11)  PanelPanel(content::Union{AbstractString,                            
Term.Renderables.AbstractRenderable}, ::Val{true}, padding::Term.Layout.Padding; 
height, width, background, justify, kwargs...)                                  
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/panels.jl:219  
                                                                                 
   ────── Methods in Term.Layout for AbstractRenderable ──────                 
     (12)  hLinehLine(ren::Term.Renderables.AbstractRenderable; kwargs...)     
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/layout.jl:697
                                                                               
   ────── Methods in Term.Tprint for AbstractRenderable ──────                  
     (13)  tprinttprint(io::IO, x::Term.Renderables.AbstractRenderable;         
highlight)                                                                      
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/tprint.jl:54  
                                                                                
   ────── Methods in Term.Compositors for AbstractRenderable ──────                                                       
     (14)  update!update!(compositor::Compositor, id::Symbol, content::Union{String, Term.Renderables.AbstractRenderable})
             →                                                                                                            
/Users/federicoclaudi/Documents/Github/Term.jl/src/compositors.jl:126                                                     
                                                                                                                          
   ────── Methods in Term.Layout for AbstractRenderable ──────                 
     (15)  vLinevLine(ren::Term.Renderables.AbstractRenderable; kwargs...)     
             → /Users/federicoclaudi/Documents/Github/Term.jl/src/layout.jl:615
                                                                               
